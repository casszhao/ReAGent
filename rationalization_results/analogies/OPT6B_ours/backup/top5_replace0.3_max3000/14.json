{
    "$schema": "../docs/rationalization.schema.json",
    "id": 14,
    "input-text": [
        "</s>",
        "I",
        " thought",
        " it",
        " would",
        " be",
        " the",
        " worst",
        " thing",
        " I",
        "'d",
        " ever",
        " encounter",
        ".",
        " (",
        "I",
        " tried",
        " to",
        " ignore",
        " my",
        " phone",
        " vibr",
        "ating",
        " in",
        " my",
        " pocket",
        ").",
        " But",
        " when",
        " I",
        " did",
        " end",
        " up",
        " encountering",
        " it",
        ",",
        " it",
        " turned",
        " out",
        " it",
        " wasn",
        "'t",
        " so"
    ],
    "input-tokens": [
        2,
        100,
        802,
        24,
        74,
        28,
        5,
        2373,
        631,
        38,
        1017,
        655,
        6376,
        4,
        36,
        100,
        1381,
        7,
        8861,
        127,
        1028,
        31495,
        1295,
        11,
        127,
        7524,
        322,
        125,
        77,
        38,
        222,
        253,
        62,
        37476,
        24,
        6,
        24,
        1224,
        66,
        24,
        938,
        75,
        98
    ],
    "target-text": " bad",
    "target-token": 1099,
    "rational-size": 8,
    "rational-positions": [
        0,
        1,
        2,
        3,
        31,
        40,
        41,
        42
    ],
    "rational-text": [
        "</s>",
        "I",
        " thought",
        " it",
        " end",
        " wasn",
        "'t",
        " so"
    ],
    "rational-tokens": [
        2,
        100,
        802,
        24,
        253,
        938,
        75,
        98
    ],
    "importance-scores": [
        1.717463078421133e-07,
        5.487044235923674e-32,
        5.2510838753368574e-33,
        4.959750388167095e-10,
        5.748084620718688e-31,
        2.36240224590343e-25,
        1.5703844988363943e-27,
        1.4937140235815605e-07,
        8.423267936910779e-36,
        1.2523642711281592e-22,
        4.5263494371137867e-20,
        1.112030139765643e-35,
        5.209312513490296e-17,
        2.2420775429197073e-44,
        1.1975370704256301e-29,
        5.732906520111436e-32,
        1.4458295825076047e-33,
        1.070910110616069e-29,
        8.163858044446526e-14,
        8.793811163733125e-25,
        0.0,
        4.8863880937576826e-23,
        6.278185914277371e-28,
        1.3916735602456654e-12,
        0.0,
        1.7728115783917808e-31,
        1.5004067258019998e-30,
        0.1999998539686203,
        2.8652416618949004e-25,
        7.350108112063757e-22,
        2.527914244543296e-16,
        0.20000000298023224,
        9.303515416343166e-19,
        4.1535498812149324e-27,
        3.1712153019398773e-28,
        3.886076648535947e-31,
        1.0195365345682097e-23,
        5.301221874840043e-17,
        2.310142942012986e-14,
        7.437933741503727e-28,
        6.261573204380255e-11,
        0.1999882012605667,
        0.4000116288661957
    ],
    "comments": {
        "created-by": "run_analogies.py",
        "args": {
            "model": "KoboldAI/OPT-6.7B-Erebus",
            "cache_dir": "cache/",
            "tokenizer": "KoboldAI/OPT-6.7B-Erebus",
            "data_dir": "data/analogies/OPT6B/",
            "importance_results_dir": "rationalization_results/analogies/OPT6B_ours",
            "device": "cuda",
            "rationalization_config": "config/aggregation.replacing_delta_prob.postag.json",
            "input_num_ratio": 1.0,
            "logfolder": "logs/analogies/OPT6B_ours",
            "loglevel": 20
        },
        "time_elapsed": 354.41646003723145,
        "separate_rational": [
            [
                " end",
                "'t",
                " out",
                " wasn",
                " so"
            ],
            [
                " But",
                " worst",
                "'t",
                " vibr",
                " end"
            ],
            [
                " so",
                "'t",
                "</s>",
                "I",
                " thought"
            ],
            [
                "'t",
                " so",
                "</s>",
                " it",
                " wasn"
            ],
            [
                " so",
                "</s>",
                "I",
                " thought",
                " it"
            ]
        ]
    }
}