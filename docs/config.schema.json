{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Config",
    "description": "Config for rationalization",
    "type": "object",
    "properties": {
        "rational": {
            "description": "Rational",
            "type": "object",
            "properties": {
                "size": {
                    "description": "Absolute size of the rational",
                    "type": [
                        "integer",
                        "null"
                    ],
                    "minimum": 1
                },
                "size_ratio": {
                    "description": "Relative size of the rational",
                    "type": [
                        "number",
                        "null"
                    ],
                    "exclusiveMinimum": 0,
                    "exclusiveMaximum": 1
                }
            },
            "required": [
                "size",
                "size_ratio"
            ]
        },
        "rationalizer": {
            "description": "Rationalizer",
            "type": "object",
            "properties": {
                "type": {
                    "description": "type",
                    "type": "string",
                    "enum": [
                        "sampling",
                        "aggregation"
                    ]
                },
                "sampling": {
                    "description": "Config for sampling type",
                    "type": "object",
                    "properties": { }
                },
                "aggregation": {
                    "description": "Config for aggregation type",
                    "type": "object",
                    "properties": {
                        "batch_size": {
                            "description": "Batch size to aggregate",
                            "type": "integer",
                            "minimum": 1
                        },
                        "overlap_threshold": {
                            "description": "minimum token overlapping across the batch to consider as a rational",
                            "type": "integer",
                            "minimum": 1
                        },
                        "overlap_strict_pos": {
                            "description": "Whether strict to token position. Otherwise, consider token it self",
                            "type": "boolean"
                        },
                        "save_separate_rational": {
                            "description": "Whether to save a separate version of rational for each sample in a batch",
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "type"
            ]
        },
        "importance_score_evaluator": {
            "description": "Config for importance score evaluator",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of importance score evaluator",
                    "type": "string",
                    "enum": [
                        "delta_probability",
                        "bayesian_optimization"
                    ]
                },
                "delta_probability": {
                    "description": "Config for delta_probability type",
                    "type": "object",
                    "properties": {
                        "replacing_ratio": {
                            "description": "Replacing ratio when updating importance score",
                            "type": "number",
                            "exclusiveMinimum": 0,
                            "exclusiveMaximum": 1
                        },
                        "max_steps": {
                            "description": "Max steps of updating",
                            "type": "number",
                            "minimum": 1
                        }
                    }
                },
                "bayesian_optimization": {
                    "description": "Config for bayesian_optimization type",
                    "type": "object",
                    "properties": {
                        "sampling": {
                            "description": "Sampling config",
                            "type": "object",
                            "properties": {
                                "multiplier": {
                                    "description": "Multiplier when expanding sample set",
                                    "type": "number",
                                    "minimum": 1
                                },
                                "increment": {
                                    "description": "Increment when expanding sample set",
                                    "type": "integer",
                                    "minimum": 1
                                }
                            }
                        },
                        "training": {
                            "description": "Training config. See: BoTorch",
                            "type": "object"
                        },
                        "optimizing": {
                            "description": "Optimizing config. See: BoTorch",
                            "type": "object"
                        }
                    }
                }
            },
            "required": [
                "type"
            ]
        },
        "replacing": {
            "description": "Config for replacing",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of replacement token sampling",
                    "type": "string",
                    "enum": [
                        "uniform",
                        "inferential",
                        "postag"
                    ]
                },
                "uniform": {
                    "description": "Config for uniform type",
                    "type": "object",
                    "properties": { }
                },
                "inferential": {
                    "description": "Config for inferential type",
                    "type": "object",
                    "properties": { }
                },
                "postag": {
                    "description": "Config for postag type",
                    "type": "object",
                    "properties": { }
                }
            },
            "required": [
                "type"
            ]
        },
        "stopping_condition": {
            "description": "Config for stopping_condition",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of stopping condition",
                    "type": "string",
                    "enum": [
                        "top_k",
                        "dummy"
                    ]
                },
                "top_k": {
                    "description": "Config for top_k type",
                    "type": "object",
                    "properties": {
                        "tolerance": {
                            "description": "tolerance (k) for stopping condition evaluation",
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                },
                "dummy": {
                    "description": "For debugging only",
                    "type": "object",
                    "properties": { }
                }
            },
            "required": [
                "type"
            ]
        }
        
    },
    "required": [
        "rational",
        "rationalizer",
        "importance_score_evaluator",
        "replacing",
        "stopping_condition"
    ]
}